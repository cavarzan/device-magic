apply plugin: 'com.android.application'

apply plugin: "me.tatarka.retrolambda"
apply plugin: "com.neenbedankt.android-apt"
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId 'io.github.cavarzan.devicemagic'
        minSdkVersion 15
        targetSdkVersion 23

        multiDexEnabled true

        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner 'io.github.cavarzan.devicemagic.MockTestRunner'

    }

    signingConfigs {
        app {
            storeFile file('io.github.cavarzan.devicemagic.keystore')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }

    buildTypes {

        applicationVariants.all { variant ->
            if (variant.getBuildType().isMinifyEnabled()) {
                variant.assemble.doLast {
                    copy {
                        from variant.mappingFile
                        into "${rootDir}/proguardTools"
                        rename { String fileName ->
                            "mapping-${variant.name}.txt"
                        }
                    }
                }
            }
        }

        all {
            buildConfigField 'String', 'API_ENDPOINT_LOCAL', "\"https://glacial-sands-39825.herokuapp.com/\""
            buildConfigField 'String', 'API_ENDPOINT_INTERNAL', "\"https://glacial-sands-39825.herokuapp.com/\""
            buildConfigField 'String', 'API_ENDPOINT_STAGING', "\"https://glacial-sands-39825.herokuapp.com/\""
            buildConfigField 'String', 'API_ENDPOINT_PRODUCTION', "\"https://glacial-sands-39825.herokuapp.com/\""
        }
        debug {
            def host = InetAddress.getLocalHost().getCanonicalHostName()
            buildConfigField "String", "LOCAL_IP", '\"' + host + '\"'
            minifyEnabled false
            shrinkResources false

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            apply plugin: "signing"

            shrinkResources true
            minifyEnabled true

            signingConfig signingConfigs.app

        }
    }



    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/dependencies'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/notice'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        pickFirst 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        pickFirst 'META-INF/maven/com.google.guava/guava/pom.properties'

        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
        pickFirst 'META-INF/maven/com.google.dagger/dagger/pom.properties'

        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
        pickFirst 'META-INF/maven/com.google.dagger/dagger/pom.xml'

        exclude 'META-INF/license'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/services/org.robolectric.internal.ShadowProvider'
        pickFirst 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'assets/oracle_mobile_cloud_internal_config.xml'

    }

    productFlavors {
        internal {
            applicationId 'io.github.cavarzan.devicemagic.internal'
        }
        production {
            applicationId 'io.github.cavarzan.devicemagic'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    lintOptions {
        disable "InvalidPackage", 'TypographyFractions', 'TypographyQuotes', 'TrustAllX509TrustManager'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions {
        unitTests.returnDefaultValues = true
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }

    }

}


apt {
    arguments {
    }
}
retrolambda {
    jvmArgs "-noverify"
}


repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:2.1.0"
    provided "javax.annotation:jsr250-api:1.0"
    apt "com.google.dagger:dagger-compiler:2.4"
    apt "frankiesardo:auto-parcel:1.0.1"
    provided "frankiesardo:auto-parcel:1.0.1"

    compile 'com.fasterxml.jackson.core:jackson-core:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.7.3'
    compile "com.android.support:support-annotations:23.3.0"
    compile "io.reactivex:rxjava:1.1.3"
    compile "io.reactivex:rxandroid:1.1.0"
    compile "com.squareup.okhttp3:okhttp:3.2.0"
    compile "com.google.dagger:dagger:2.4"
    compile "com.android.support:support-v4:23.3.0"
    compile "com.android.support:appcompat-v7:23.3.0"
    compile "com.android.support:design:23.3.0"
    compile "com.android.support:recyclerview-v7:23.3.0"
    compile "info.android15.nucleus:nucleus:2.0.5"
    compile "info.android15.nucleus:nucleus-support-v4:2.0.5"
    compile "info.android15.nucleus:nucleus-support-v7:2.0.5"
    compile "com.jakewharton:butterknife:7.0.1"
    compile "com.jakewharton.timber:timber:3.1.0"

    // android-hipster-needle-gradle-dependency

}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}

